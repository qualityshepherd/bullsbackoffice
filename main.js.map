{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;AAAuE;AACrC;AAClC,iBAAiB,oDAAqB;;AAEtC;AACA;AACA;AACA,wBAAwB,qDAAa;AACrC,2BAA2B,yDAAiB;AAC5C,yDAAyD,+CAAgB,CAAC;;AAE1E;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,eAAe,mDAAmD,gBAAgB;AAC/G,8BAA8B,eAAe;AAC7C;AACA,cAAc;AACd,cAAc;AACd;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA,+BAA+B,kDAAU,iBAAiB;AAC1D;AACA;AACA,KAAK;;AAEL;AACA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;;;AC3CY;;AAE/B;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO,4CAA4C,uDAAwB;AAC3E;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,yBAAyB,KAAK,KAAK,IAAI,gBAAgB,IAAI,QAAQ,IAAI;AACvE,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/CoD;AAClB;;AAElC;AACA;AACA;AACA,wBAAwB,qDAAa;AACrC;AACA;AACA,KAAK;;AAEL;AACA,sCAAsC,+CAAgB,CAAC;AACvD;AACA,6BAA6B,eAAe,mDAAmD,gBAAgB;AAC/G,8BAA8B,eAAe;AAC7C,iBAAiB,UAAU;AAC3B,+BAA+B,kDAAU,iBAAiB;AAC1D;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACtBnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,OAAO,OAAO,MAAM,WAAW,OAAO,MAAM,SAAS,UAAU;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;AClBmD;;AAEvE;AACA;AACA;AACA,wBAAwB,qDAAa;AACrC,2BAA2B,yDAAiB;AAC5C,iDAAiD,MAAM;AACvD;AACA,KAAK;;AAEL;AACA;AACA;AACA,6BAA6B,eAAe,2BAA2B,gBAAgB;AACvF,8BAA8B,eAAe;AAC7C,iBAAiB,UAAU;AAC3B,+BAA+B,kDAAU,iBAAiB;AAC1D;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;AC5BoD;;AAEvE;AACA;AACA;AACA,wBAAwB,qDAAa;AACrC,2BAA2B,yDAAiB;AAC5C,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,6BAA6B,eAAe,2BAA2B,iBAAiB,IAAI,eAAe;AAC3G;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;AC3BrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;ACPuC;;AAE3D;AACA;AACA,wBAAwB,qDAAa;AACrC,2BAA2B,yDAAiB;;AAE5C;AACA;AACA;AACA,2BAA2B,eAAe,0BAA0B,gBAAgB;AACpF,6BAA6B,eAAe;AAC5C;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,OAAO;;;;;;UCtBtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNkC;AACA;AACE;AACF;AACI;AACF;AACI;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sDAAI;AACf,WAAW,sDAAI;AACf,YAAY,uDAAK;AACjB,WAAW,sDAAI;AACf,aAAa,wDAAM;AACnB,YAAY,uDAAK;AACjB,cAAc,yDAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,+CAA+C,KAAK;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://brine/./src/views/blog.js","webpack://brine/./src/utils.js","webpack://brine/./src/views/post.js","webpack://brine/./src/views/about.js","webpack://brine/./src/views/tags.js","webpack://brine/./src/views/search.js","webpack://brine/./src/views/error.js","webpack://brine/./src/views/archive.js","webpack://brine/webpack/bootstrap","webpack://brine/webpack/runtime/define property getters","webpack://brine/webpack/runtime/hasOwnProperty shorthand","webpack://brine/webpack/runtime/make namespace object","webpack://brine/./src/router.js"],"sourcesContent":["import { readSiteIndex, removeFuturePosts, renderTags } from '../utils'\nimport config from '../../package'\nconst maxPosts = config.splog.maxPosts\n\nconst blog = {\n  async render (params) {\n    const numPosts = params.get('numPosts') ? Number(params.get('numPosts')) + maxPosts : maxPosts\n    const index = await readSiteIndex()\n    const publishedPosts = removeFuturePosts(index) // don't display posts with future date\n    const canonicalLink = `<link rel=\"canonical\" href=\"${config.splog.url}\">` // seo\n\n    let posts = publishedPosts.slice(0, numPosts).map(post => {\n      // Split content at <break> tag\n      const [preview, fullContent] = post.html.split('<break>');\n\n      return `\n        <div class=\"post\">\n          <a href=\"#post?s=${post.meta.slug}\" aria-label=\"post-title\"><h2 class=\"post-title\">${post.meta.title}</h2></a>\n          <div class=\"date\">${post.meta.date}</div>\n          <div>\n            ${preview}\n            ${fullContent ? `\n              <div class=\"post-break\">\n                <a href=\"#post?s=${post.meta.slug}\" class=\"read-more\">Read more...</a>\n              </div>\n            ` : ''}\n          </div>\n          <span class=\"tags\">${renderTags(post.meta.tags)}</span>\n        </div>\n      `\n    }).join('\\n')\n\n    const morePostsBtn = `\n      <div class=\"container center\">\n        <a href=\"#blog?numPosts=${numPosts}\" aria-label=\"more-posts\"><button id=\"more-posts\">More posts...</button></a>\n      </div>\n      `\n    // only show button if there are more to load\n    if (numPosts < publishedPosts.length) posts += morePostsBtn\n    posts += canonicalLink // for seo\n    return posts\n  }\n}\nexport default blog\n","import config from '../package'\n\n/**\n * Functions shared among pages...\n * Note: fetch is provided in the browser...\n */\n\nexport function removeFuturePosts (posts) {\n  return posts.filter(post => new Date(post.meta.date) <= new Date())\n}\n\nexport async function readSiteIndex (pathToIndex = config.splog.pathToIndex) {\n  const data = await fetch(pathToIndex)\n    .catch(err => { console.log(err) })\n  const index = await data.json()\n  return index.sort(sortByDate())\n}\n\nexport function sortBy (prop) {\n  return (a, b) => {\n    return (a[prop] > b[prop]) ? 1 : (a[prop] < b[prop]) ? -1 : 0\n  }\n}\n\nexport function sortByDate (asc = true) {\n  return (a, b) => {\n    a = new Date(a.meta.date.replace(/-/g, '/')) // because safari is trash\n    b = new Date(b.meta.date.replace(/-/g, '/'))\n    if (asc) {\n      return (a < b) ? 1 : a > b ? -1 : 0\n    } else {\n      return (a > b) ? 1 : a < b ? -1 : 0\n    }\n  }\n}\n\nexport function renderTags (tagString, hash = '#tags') {\n  if (tagString) {\n    return tagString.toLowerCase().split(/,\\s?/).map(tag => {\n      return `<a href=\"${hash}?t=${tag}\" aria-label=\"${tag}-tag\">${tag}</a>`\n    }).join(', ')\n  }\n}\n\nexport async function getJsonData (path) {\n  const data = await fetch(path)\n  return await data.json()\n}\n","import { readSiteIndex, renderTags } from '../utils'\nimport config from '../../package'\n\n// single blog post...\nconst post = {\n  async render (params) {\n    const index = await readSiteIndex()\n    const post = index.find(post => {\n      return post.meta.slug === params.get('s')\n    })\n\n    return `\n        <link rel=\"canonical\" href=\"${config.splog.url}/#post\">\n        <div class=\"post\">\n          <a href=\"#post?s=${post.meta.slug}\" aria-label=\"post-title\"><h2 class=\"post-title\">${post.meta.title}</h2></a>\n          <div class=\"date\">${post.meta.date}</div>\n          <div>${post.html}</div>\n          <span class=\"tags\">${renderTags(post.meta.tags)}</span>\n        </div>\n      `\n  }\n}\nexport default post\n","const about = {\n  render () {\n    return `\n      <h2>About</h2>\n\n      <div class=\"center\">\n        I'm a blabby nerd that lives in the desert.\n        <div class=\"social\">\n          <a href='&#109;a&#105;l&#116;o&#58;m%65%4&#48;b&#114;&#105;n%65&#46;%64e&#118;' title=\"email\"><img src=\"assets/images/social/email.png\" alt=\"email\"></a>\n          <a href=\"https://casadeocio.itch.io/\" title=\"games on itch\"><img src=\"assets/images/social/itch-io.png\" alt=\"my publications on itch\"></a>\n          <a href=\"https://podcasts.apple.com/au/podcast/play-worlds-podcast/id1722152993\" title=\"Play Worlds Podcast\"><img src=\"assets/images/social/podcast.png\" alt=\"Play Worlds Podcast\"></a>\n          <a href=\"https://www.youtube.com/channel/UCy0_3iGguFBabUOdQ2o_ZUQ\" title=\"youtube\"><img src=\"assets/images/social/youtube.png\" alt=\"youtube\"></a>\n          <a href=\"/assets/rss/blog.xml\"><img src=\"assets/images/social/rss.png\" title=\"blog rss\" alt=\"blog rss\"></a>\n        </div>\n      </div>\n    `\n  }\n}\nexport default about\n","import { readSiteIndex, removeFuturePosts, renderTags } from '../utils'\n\nconst tags = {\n  async render (params) {\n    const t = params.get('t')\n    const index = await readSiteIndex()\n    const publishedPosts = removeFuturePosts(index)\n    const found = await publishedPosts.filter(({ meta }) => {\n      return meta.tags.toLowerCase().indexOf(t.toLowerCase()) > -1\n    })\n\n    const posts = found.map(post => {\n      return `\n        <div class=\"post\">\n          <a href=\"#post?s=${post.meta.slug}\"><h2 class=\"post-title\">${post.meta.title}</h2></a>\n          <div class=\"date\">${post.meta.date}</div>\n          <div>${post.html}</div>\n          <span class=\"tags\">${renderTags(post.meta.tags)}</span>\n        </div>\n      `\n    }).join('\\n')\n\n    const noResults = `\n      <h2>No Results Found</h2>\n    `\n    return (posts.length > 0) ? posts : noResults\n  }\n}\nexport default tags\n","import { readSiteIndex, removeFuturePosts, renderTags } from '../utils'\n\nconst search = {\n  async render (params) {\n    const q = params.get('q').toLowerCase()\n    const index = await readSiteIndex()\n    const publishedPosts = removeFuturePosts(index)\n    const found = await publishedPosts.filter(({ meta, html }) => {\n      return meta.title.toLowerCase().indexOf(q) > -1 ||\n             meta.tags.toLowerCase().indexOf(q) > -1 ||\n             html.toLowerCase().indexOf(q) > -1\n    })\n\n    const posts = found.map(post => {\n      return `\n        <article class=\"post\">\n          <a href=\"#post?s=${post.meta.slug}\"><h2 class=\"post-title\">${post.meta.title} - ${post.meta.date}</h2></a>\n        </article>\n        `\n    }).join('\\n')\n\n    const noResults = `\n      <h2 id=\"no-results\">No Results Found...</h2>\n    `\n    return (posts.length > 0) ? posts : noResults\n  }\n}\nexport default search\n","const error = {\n  render () {\n    return `\n      <h2>404 Not Found...</h2>\n    `\n  }\n}\nexport default error\n","import { readSiteIndex, removeFuturePosts } from '../utils'\n\nconst archive = {\n  async render (params) {\n    const index = await readSiteIndex()\n    const publishedPosts = removeFuturePosts(index)\n\n    const posts = publishedPosts.map(post => {\n      return `\n      <p>\n        <a href=\"#post?s=${post.meta.slug}\"><span class=\"archive\">${post.meta.title}</span></a>\n        <span class=\"date\">${post.meta.date}</span>\n      </p>\n      `\n    }).join('\\n')\n\n    const noResults = `\n      <h2>No Results Found</h2>\n    `\n    return (posts.length > 0) ? posts : noResults\n  }\n}\nexport default archive\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import blog from './views/blog.js'\nimport post from './views/post.js'\nimport about from './views/about.js'\nimport tags from './views/tags.js'\nimport search from './views/search.js'\nimport error from './views/error.js'\nimport archive from './views/archive.js'\n\n/**\n * To add pages:\n * 1. import your page/view/whatever\n * 2. add the hash and page to the routes object\n * 3. profit\n */\nconst routes = {\n  '#blog': blog,\n  '#post': post,\n  '#about': about,\n  '#tags': tags,\n  '#search': search,\n  '#error': error,\n  '#archive': archive\n}\n\n/**\n * grab the hash, call the route and stuff it into the dom!\n */\nconst router = async () => {\n  const { hash, params } = await getHash()\n  document.querySelector('main').innerHTML = await routes[hash].render(params)\n  setActiveNav(hash)\n}\n\n/**\n * set the active nav element if it exists\n * @param  {string} hash\n */\nconst setActiveNav = async (hash) => {\n  const nav = document.querySelector(`[href=\"${hash}\"]`)\n  if (nav) {\n    document.querySelector('.active').classList.remove('active')\n    nav.classList.add('active')\n  }\n}\n\n/**\n * grabs the hash and handles defaults/errors\n * @return {obj}\n */\nconst getHash = async () => {\n  let [hash, params] = await location.hash.split('?')\n  params = new URLSearchParams(params) // need this semi!\n\n  if (hash === '' || hash === '/') {\n    hash = '#blog'\n  }\n\n  if (!routes[hash]) {\n    hash = '#error'\n  }\n  return { hash, params }\n}\n\n// and we're listening...\nwindow.addEventListener('hashchange', router)\nwindow.addEventListener('load', router)\nwindow.addEventListener('keyup', e => {\n  if (e.keyCode === 27) {\n    toggleHamburger() // eslint-disable-line\n  }\n})\n"],"names":[],"sourceRoot":""}